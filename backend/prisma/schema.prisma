// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

// Modelo para candidatos
model Candidate {
  id            Int           @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String        @unique
  phone         String
  address       String
  cvFilePath    String?       // Ruta al archivo CV almacenado
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  education     Education[]   // Relaci贸n con educaci贸n
  experience    Experience[]  // Relaci贸n con experiencia laboral
}

// Modelo para la educaci贸n de un candidato
model Education {
  id            Int         @id @default(autoincrement())
  institution   String
  degree        String
  fieldOfStudy  String
  startDate     DateTime?
  endDate       DateTime?
  candidate     Candidate   @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId   Int
}

// Modelo para la experiencia laboral de un candidato
model Experience {
  id            Int         @id @default(autoincrement())
  company       String
  position      String
  description   String?     @db.Text
  startDate     DateTime?
  endDate       DateTime?
  candidate     Candidate   @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId   Int
}