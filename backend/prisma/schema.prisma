// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

// Modelo para candidatos
model Candidate {
  id                Int               @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String            @unique
  phone             String?
  address           String?
  city              String?
  state             String?
  country           String?
  postalCode        String?
  summary           String?           @db.Text
  cvFilePath        String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  education         Education[]
  workExperience    WorkExperience[]
  skills            CandidateSkill[]
  status            CandidateStatus   @default(NEW)
}

// Modelo para educaci贸n
model Education {
  id              Int       @id @default(autoincrement())
  institution     String
  degree          String
  fieldOfStudy    String?
  startDate       DateTime
  endDate         DateTime?
  description     String?   @db.Text
  candidate       Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId     Int
}

// Modelo para experiencia laboral
model WorkExperience {
  id              Int       @id @default(autoincrement())
  company         String
  position        String
  location        String?
  startDate       DateTime
  endDate         DateTime?
  description     String?   @db.Text
  candidate       Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId     Int
}

// Modelo para habilidades
model Skill {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  candidates      CandidateSkill[]
}

// Tabla de relaci贸n entre candidatos y habilidades
model CandidateSkill {
  candidate       Candidate         @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId     Int
  skill           Skill             @relation(fields: [skillId], references: [id], onDelete: Cascade)
  skillId         Int
  proficiencyLevel ProficiencyLevel @default(INTERMEDIATE)

  @@id([candidateId, skillId])
}

// Enumeraci贸n para el nivel de competencia en habilidades
enum ProficiencyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

// Enumeraci贸n para el estado del candidato
enum CandidateStatus {
  NEW
  REVIEWING
  INTERVIEWED
  OFFERED
  HIRED
  REJECTED
}